{"version":3,"sources":["component/Singlechart.js","component/Fullchart.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","media","height","Singlechart","name","email","img","classes","Card","className","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","color","Fullchart","cardDataArray","Fragment","CssBaseline","Container","style","backgroundColor","Grid","container","justify","spacing","map","data","index","item","App","useState","search","setSearch","array","setArray","useEffect","axios","get","then","res","catch","err","console","log","filterRobots","filter","robot","toLowerCase","includes","TextField","id","onChange","e","target","value","InputProps","startAdornment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAQMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,OAAQ,OAIG,SAASC,EAAT,GAAwC,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,MAAMC,EAAM,EAANA,IACxCC,EAAUV,IAEhB,OACE,cAACW,EAAA,EAAD,CAAMC,UAAWF,EAAQR,KAAzB,SACE,eAACW,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEF,UAAWF,EAAQN,MACnBW,MAAON,EACPO,MAAM,SAER,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,SACGd,IAEH,cAACW,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,IAA5D,SACGb,Y,+BC5BE,SAASe,EAAT,GAAqC,IAAjBC,EAAgB,EAAhBA,cAC/B,OACE,eAAC,IAAMC,SAAP,WACE,cAACC,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CAAWC,MAAQ,CAACC,gBAAgB,SAApC,SACA,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,QAAS,GAA1C,SACCT,EAAcU,KAAI,SAACC,EAAKC,GAAN,OACnB,cAACN,EAAA,EAAD,CAAkBO,MAAI,EAAtB,SACA,cAAC,EAAD,CAAY5B,IAAG,+BAA0B2B,EAA1B,YAA2C7B,KAAM4B,EAAK5B,KAAMC,MAAO2B,EAAK3B,OAAY4B,IADxFA,a,+CCoCJE,MAvCf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACPC,EADO,KACAC,EADA,OAEWF,mBAAS,IAFpB,mBAEPG,EAFO,KAEDC,EAFC,KAGbC,qBAAU,WACRC,IAAMC,IAAI,8CAA8CC,MAAK,SAAAC,GAAG,OAAIL,EAAUK,EAAIb,SAAOc,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QACnH,IACH,IAAMG,EAAeX,EAAMY,QAAO,SAACC,GAAD,OAClCA,EAAMhD,KAAKiD,cAAcC,SAASjB,EAAOgB,gBAAgBD,EAAM/C,MAAMiD,SAASjB,MAE5E,OACE,sBAAK5B,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UAEE,6CAGA,cAAC8C,EAAA,EAAD,CAEAC,GAAG,4BACHC,SAAU,SAACC,GAAD,OAAKpB,EAAUoB,EAAEC,OAAOC,QAClCC,WAAY,CACVC,eAEI,cAAC,IAAD,UAQN,cAAC1C,EAAD,CAAWC,cAAe6B,QC7BnBa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4fddcca3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 250,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport default function Singlechart({name,email,img}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={img}\r\n          title=\"Demo\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {email}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      \r\n    </Card>\r\n  );\r\n}","import Singlecart from \"./Singlechart\"\r\nimport Container from '@material-ui/core/Container';\r\nimport React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nexport default function Fullchart({cardDataArray}) {\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        \r\n        <Container style= {{backgroundColor:\"white\"}} >\r\n        <Grid container justify=\"center\" spacing={10}>\r\n        {cardDataArray.map((data,index)=>\r\n        <Grid key={index} item>\r\n        <Singlecart img={`https://robohash.org/${index}?200x200`} name={data.name} email={data.email} key={index}/>\r\n        </Grid>\r\n        )}\r\n         </Grid>\r\n        </Container>\r\n        \r\n      </React.Fragment>\r\n    );\r\n  }\r\n  ","import './App.css';\n\nimport Fullchart from \"./component/Fullchart\"\nimport axios from 'axios'\nimport {useState,useEffect} from 'react'\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\n\n\nfunction App() {\n  const[search,setSearch] = useState('');\n  const[array,setArray] = useState([]);\n  useEffect(() => {\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then(res => setArray (res.data)).catch(err => console.log(err)) \n}, [])\nconst filterRobots = array.filter((robot) =>\nrobot.name.toLowerCase().includes(search.toLowerCase())||robot.email.includes(search)\n);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       \n        <h3>\n        RoBoFriends\n        </h3>\n        <TextField\n        \n        id=\"input-with-icon-textfield\"\n        onChange={(e)=>setSearch(e.target.value)}\n        InputProps={{\n          startAdornment: (\n            \n              <SearchIcon />\n            \n          ),\n        }}\n      />\n      \n      \n       </header>\n        <Fullchart cardDataArray={filterRobots} />\n        \n     \n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}